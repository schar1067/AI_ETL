This way, but basically it was an issue that happened on June 5, in which a single queue was stopped processing. This also coincided with a problem that you were in the aging, the colleagues who were in that 9-11 also. Suddenly they have more notion of it. Well, some process at the Java level, some thread that was not cleaned well, something that remains there, it generates that difficulty. What we propose is a container renewal policy. Containers that have been up for a long time. As to, let's say, attenuate that a bit. Those problems. An adjustment was made at the level of the nocturnal processes. This permanently increases the number of K2K consumers. And what we are currently working on is a small improvement in the existing VA model. This improvement, what it seeks is to reduce the time of insertion in that table. It is a rather delicate improvement, that is why we are taking our time. And also, on behalf of Secodes, to review an issue of some K2K is to analyze and raise alerts of queues that are not being processed for a long time. Particularly in K2K we have a queue for each sale. As learnings, what we tell them, we know that these solutions that we propose here are not the root solutions for the problems of K2K synchronization, but the refactor is the true solution. However, we are aware that we must be aware of these synchronization processes. Work a lot on monitoring issues and realizing when these issues are not working. And also on the improvements that we can make to the model at this time. I don't know if you have any other questions regarding this post-mortem, or something you want to add, colleagues. I don't know if you have any other questions regarding this post-mortem, or something you want to add, colleagues.